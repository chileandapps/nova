{"version":3,"sources":["constant.js","utilities.js","tronWeb.js","store/initialState.js","contract.js","store/context.js","components/DashboardStyled.js","components/Dashboard.jsx","components/Modal.jsx","components/Table.jsx","components/Home.jsx","assets/logo.png","components/Navbar.jsx","App.jsx","index.js"],"names":["CONTRACT_ADDRESS","TRX_UNIT","fixedDecimal","decimal","Math","floor","hexToTrx","data","window","tronWeb","toDecimal","_hex","hexToDecimal","getContract","a","contract","at","getWalletInfo","address","defaultAddress","base58","trx","getBalance","balance","walletInfoInitialState","contractGlobalInfoInitialState","getContractBalance","totalInvestments","contractUserInfoInitialState","uid","referalLink","investorInfo","referrerEarnings","availableReferrerEarnings","reinvestWallet","referrer","level1RefCount","level2RefCount","level3RefCount","planCount","checkpoint","dividens","investmentPlan","investmentDates","investments","currentDividends","isExpireds","modalInitialState","visible","title","text","Contract","userAddress","this","console","log","address2UID","call","uidHex","render","onInvest","watch","err","event","onWithdraw","onReinvest","getCurrentContractBalance","getTotalInvestment","getInvestorInfo","getUserInvestmentPlan","totalInvestments_","getInvestorInfoByUID","Date","toLocaleString","getInvestmentPlanByUID","userInvestmentPlan","plan","Array","forEach","element","push","index","investment","referalCode","invest","send","callValue","result","withdraw","reinvest","ContractContext","createContext","InvestContainer","styled","div","ReferalItem","DashboardContainer","HeaderBox","BoxContainer","Box","props","left","Button","button","fill","ButtonLarge","Dashboard","setModal","contractGlobal","contractUser","trxBalance","useState","setInvestment","useContext","location","useLocation","handleInvestment","preventDefault","search","split","code","isNaN","hash","error","onSubmit","className","placeholder","type","name","onChange","target","value","onClick","protocol","host","ModalContainer","Modal","modal","useStyles","makeStyles","table","maxWidth","InvestmentTable","classes","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","HomeContainer","Footer","Home","history","useHistory","LogoContainer","NavbarContainer","Navbar","userLogged","walletInfo","src","Logo","width","alt","to","href","urljoin","process","App","setRender","setContract","setWalletInfo","setContractUser","setContractGlobal","setUserLogged","Container","useEffect","fetchTronWeb","then","fetchData","catch","Promise","resolve","reject","setTimeout","tronWebState","ready","Error","Initialize","subscribeEvents","getContractGlobalInfo","getContractUserInfo","path","Provider","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fdc7a08.chunk.js","sourcesContent":["export const CONTRACT_ADDRESS = \"TULLfDKiPj7yqFCJGVMJj71D8Rd1MAUiUe\";\r\nexport const TRX_UNIT = 1000000;\r\nexport const MAX_DECIMAL = 1;\r\nexport const LOG_COLOR = 'background: #222; color: #bada55';","import { TRX_UNIT,MAX_DECIMAL } from \"./constant\";\r\n\r\nconst fixedDecimal = (decimal)  => {\r\n  return Math.floor(decimal* (10**MAX_DECIMAL)) / (10**MAX_DECIMAL);\r\n}\r\n\r\nconst hexToTrx = (data) => {\r\n  var decimal =  window.tronWeb.toDecimal(data._hex) / TRX_UNIT  ;\r\n  return fixedDecimal(decimal);\r\n  ;\r\n};\r\n\r\nconst hexToDecimal = (data) => {\r\n  return window.tronWeb.toDecimal(data._hex);\r\n};\r\n\r\nconst hexToUTF8 = (data) => {\r\n    return window.tronWeb.toDecimal(data._hex);\r\n}\r\n\r\nexport { hexToTrx, hexToDecimal,hexToUTF8,fixedDecimal };\r\n","import { CONTRACT_ADDRESS,TRX_UNIT } from \"./constant\";\r\nimport { fixedDecimal } from \"./utilities\";\r\n\r\nconst getTronWeb = () => {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready,\r\n      };\r\n\r\n      if (tronWebState.installed && tronWebState.loggedIn) {\r\n        // console.log(\"tronWeb\",window.tronWeb);\r\n        resolve();\r\n      } else {\r\n        reject(new Error(\"Something failed\"));\r\n      }\r\n    }, 1000);\r\n  });\r\n};\r\n\r\n//Returns the details of the contract at the specified address\r\nconst getContract = async () => {\r\n  return await window.tronWeb.contract().at(CONTRACT_ADDRESS);\r\n};\r\n\r\n//Get user Address and Balance TRX\r\nconst getWalletInfo = async () => {\r\n  let address = window.tronWeb.defaultAddress.base58;\r\n  let balance = (await window.tronWeb.trx.getBalance(address)) / TRX_UNIT;\r\n  balance = fixedDecimal(balance); \r\n  return {\r\n    address,\r\n    balance,\r\n  };\r\n};\r\n\r\nexport { getTronWeb, getContract, getWalletInfo };\r\n","export const walletInfoInitialState = {\r\n  address: \"Login\",\r\n  balance: 0,\r\n};\r\n\r\nexport const contractGlobalInfoInitialState = {\r\n  getContractBalance: 0,\r\n  totalInvestments: 0,\r\n};\r\n\r\nexport const contractUserInfoInitialState = {\r\n  uid: 0,\r\n  referalLink: 'none',\r\n  investorInfo: {\r\n    referrerEarnings: 0,\r\n    availableReferrerEarnings: 0,\r\n    reinvestWallet: 0,\r\n    referrer: 0,\r\n    level1RefCount: 0,\r\n    level2RefCount: 0,\r\n    level3RefCount: 0,\r\n    planCount: 0,\r\n    checkpoint: 0,\r\n    dividens: 0,\r\n  },\r\n  investmentPlan: [\r\n    {\r\n      investmentDates: \"\",\r\n      investments: 0,\r\n      currentDividends: 0,\r\n      isExpireds: false,\r\n    },\r\n  ]\r\n};\r\n\r\nexport const modalInitialState = {\r\n  visible: false,\r\n  title: 'title',\r\n  text: 'text',\r\n}","import { TRX_UNIT, LOG_COLOR } from \"./constant\";\r\nimport { hexToTrx, hexToDecimal } from \"./utilities\";\r\nimport { contractUserInfoInitialState } from \"./store/initialState\";\r\n\r\nclass Contract {\r\n  constructor(contract, userAddress) {\r\n    this.contract = contract;\r\n    this.userAddress = userAddress;\r\n    console.log(\"%c CONTRACT\", LOG_COLOR, contract);\r\n  }\r\n\r\n  //Initialize\r\n  async Initialize() {\r\n    let uidHex = await this.contract.address2UID(this.userAddress).call();\r\n    console.log(uidHex);\r\n    this.uid = hexToDecimal(uidHex);\r\n  }\r\n\r\n  subscribeEvents(render) {\r\n    this.contract.onInvest().watch((err, event) => {\r\n\r\n      console.log('event');\r\n      // if (err) {\r\n      //   console.error('Error with \"method\" event:', err);\r\n      // }\r\n      if (!err) {\r\n        // console.log(\"%c OnInvest\", LOG_COLOR, event);\r\n        // alert(event.transaction);\r\n        render();\r\n      }\r\n    });\r\n\r\n    this.contract.onWithdraw().watch((err, event) => {\r\n      if (!err) {\r\n        render();\r\n      }\r\n    });\r\n    this.contract.onReinvest().watch((err, event) => {\r\n      if (!err) {\r\n        render();\r\n      }\r\n    });\r\n  }\r\n\r\n  getReferalLink() {\r\n    return `http://localhost:3000?ref=${this.uid}`;\r\n  }\r\n\r\n  async getContractGlobalInfo() {\r\n    return {\r\n      getContractBalance: await this.getCurrentContractBalance(),\r\n      totalInvestments: await this.getTotalInvestment(),\r\n    };\r\n  }\r\n\r\n  async getContractUserInfo() {\r\n    if (this.uid !== 0) {\r\n      return {\r\n        uid: this.uid,\r\n        investorInfo: await this.getInvestorInfo(),\r\n        investmentPlan: await this.getUserInvestmentPlan(),\r\n      };\r\n    }\r\n\r\n    return contractUserInfoInitialState;\r\n  }\r\n\r\n  async getCurrentContractBalance() {\r\n    const data = await this.contract.getBalance().call();\r\n    return hexToTrx(data);\r\n  }\r\n  async getTotalInvestment() {\r\n    const data = await this.contract.totalInvestments_().call();\r\n    return hexToTrx(data);\r\n  }\r\n  //19\r\n  async getInvestorInfo() {\r\n    let investorInfo = await this.contract\r\n      .getInvestorInfoByUID(this.uid)\r\n      .call();\r\n    // console.log(\"investorInfo\", investorInfo);\r\n\r\n    return {\r\n      referrerEarnings: hexToTrx(investorInfo[0]),\r\n      availableReferrerEarnings: hexToTrx(investorInfo[1]),\r\n      reinvestWallet: hexToTrx(investorInfo[2]),\r\n      referrer: hexToDecimal(investorInfo[3]),\r\n      level1RefCount: hexToDecimal(investorInfo[4]),\r\n      level2RefCount: hexToDecimal(investorInfo[5]),\r\n      level3RefCount: hexToDecimal(investorInfo[6]),\r\n      planCount: hexToDecimal(investorInfo[7]),\r\n      checkpoint: new Date(\r\n        hexToDecimal(investorInfo[8]) * 1000\r\n      ).toLocaleString(),\r\n      dividens: hexToTrx(investorInfo[9][0]),\r\n    };\r\n  }\r\n  //8\r\n  async getUserInvestmentPlan() {\r\n    let userInvestmentPlan = await this.contract\r\n      .getInvestmentPlanByUID(this.uid)\r\n      .call();\r\n\r\n    // console.log(\"userInvestmentPlan\", userInvestmentPlan);\r\n\r\n    var plan = new Array();\r\n\r\n    userInvestmentPlan[0].forEach((element) => {\r\n      plan.push({\r\n        investmentDates: new Date(),\r\n        investments: 0,\r\n        currentDividends: 0,\r\n        isExpireds: false,\r\n      });\r\n    });\r\n\r\n    userInvestmentPlan[0].forEach((data, index) => {\r\n      plan[index].investmentDates = new Date(\r\n        hexToDecimal(data) * 1000\r\n      ).toLocaleString();\r\n    });\r\n\r\n    userInvestmentPlan[1].forEach((data, index) => {\r\n      plan[index].investments = hexToTrx(data);\r\n    });\r\n\r\n    userInvestmentPlan[2].forEach((data, index) => {\r\n      plan[index].currentDividends = hexToTrx(data);\r\n    });\r\n\r\n    userInvestmentPlan[3].forEach((data, index) => {\r\n      plan[index].isExpireds = data;\r\n    });\r\n\r\n    return plan;\r\n  }\r\n\r\n  async invest(investment, referalCode) {\r\n    console.log(\"referalCode\", referalCode);\r\n    let result = await this.contract.invest(referalCode).send({\r\n      // feeLimit:100_000_000,\r\n      callValue: investment * TRX_UNIT,\r\n      // tokenId:1000036,\r\n      // tokenValue:100,\r\n      // shouldPollResponse:true\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  async withdraw() {\r\n    let result = await this.contract.withdraw().send({});\r\n    console.log(result);\r\n  }\r\n\r\n  async reinvest() {\r\n    let result = await this.contract.reinvest().send({});\r\n    console.log(result);\r\n  }\r\n}\r\n\r\nexport { Contract };\r\n","import {createContext} from \"react\";\r\nexport const ContractContext  = createContext(null);","import styled from \"styled-components\";\r\n\r\nexport const InvestContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & input {\r\n    margin: 5px 0px;\r\n    height: 40px;\r\n    font-size: 1.2rem;\r\n  }\r\n\r\n  & .input-label {\r\n    font-size: 0.7rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const ReferalItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nexport const DashboardContainer = styled.div`\r\n  margin-top: 30px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n\r\n   h2 {\r\n    color: #8385a9;\r\n    text-align: center;\r\n    margin-top: 10px;\r\n  }\r\n\r\n   h3 {\r\n    margin-top: 10px;\r\n    margin-bottom: 20px;\r\n    color: #fb5e84;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const HeaderBox = styled.div`\r\n  width: 100%;\r\n  /* background-color: #343650;\r\n  box-shadow: 8px 10px rgba(0, 0, 0, 0.2); */\r\n  display:flex;\r\n  justify-content: space-evenly;\r\n\r\n  /* h2{\r\n    color: white;\r\n  } */\r\n  h3{\r\n    font-size: 1.5em;\r\n  }\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\nwidth: 100%;\r\ndisplay:flex;\r\njustify-content: space-around;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  padding: 14px;\r\n  margin: 10px 2vw;\r\n  text-align: ${(props) => (props.left ? \"left\" : \"center\")};\r\n  width: 320px;\r\n  background-color: #343650;\r\n  box-shadow: 8px 10px rgba(0, 0, 0, 0.2);\r\n\r\n\r\n\r\n  & .mb-10 {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  & .your-referal {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n  background-color: #fb5e84;\r\n  border: none;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  width: ${(props) => (props.fill ? \"100%\" : \"200px\")};\r\n  box-shadow: 1px 2px rgba(255, 0, 0, 0.8);\r\n  border-radius: 2px;\r\n`;\r\n\r\nexport const ButtonLarge = styled(Button)`\r\n  width: 280px;\r\n  font-size: 22px;\r\n  padding: 14px 0;\r\n`;\r\n","import React from \"react\";\r\nimport { useState, useContext } from \"react\";\r\nimport { ContractContext } from \"./../store/context\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  Box,\r\n  InvestContainer,\r\n  Button,\r\n  ReferalItem,\r\n  DashboardContainer,\r\n  HeaderBox,\r\n  BoxContainer,\r\n} from \"./DashboardStyled\";\r\n\r\n\r\nexport const Dashboard = ({\r\n  setModal,\r\n  contractGlobal,\r\n  contractUser,\r\n  trxBalance,\r\n}) => {\r\n  const [investment, setInvestment] = useState(0);\r\n  const contract = useContext(ContractContext);\r\n  const location = useLocation();\r\n\r\n  const handleInvestment = async (event) => {\r\n    console.log(\"referalCode\", \"asd\");\r\n    event.preventDefault();\r\n    try {\r\n      const referalCode = location.search.split(\"=\")[1];\r\n      const code = isNaN(referalCode) ? 0 : referalCode;\r\n      const hash = await contract.invest(investment, code);\r\n      console.log(hash);\r\n      setModal({\r\n        visible: \"true\",\r\n        title: \"You can track your transaction below\",\r\n        text: `View on TRONSCAN: ${hash}`,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const getReferalLink = () => {\r\n    if (contractUser.uid != \"0\") {\r\n      const location = `${window.location.protocol}//${window.location.host}?ref=${contractUser.uid} `;\r\n      return location;\r\n    }\r\n    \r\n    return \"You must invest first\";\r\n  };\r\n\r\n  const handleWithdrawal = (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      contract.withdraw();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleReinvest = (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      contract.reinvest();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DashboardContainer>\r\n        <HeaderBox>\r\n          <div>\r\n            <h2>Total Investment</h2>\r\n            <h3>{contractGlobal.totalInvestments} </h3>\r\n          </div>\r\n\r\n          <div>\r\n            <h2>Contract Balance</h2>\r\n            <h3>{contractGlobal.getContractBalance} </h3>\r\n          </div>\r\n          <div>\r\n            <h2>TRX Payout</h2>\r\n            <h3>\r\n              {contractGlobal.totalInvestments -\r\n                contractGlobal.getContractBalance}{\" \"}\r\n            </h3>\r\n          </div>\r\n\r\n          <div>\r\n            <h2>Daily Profit</h2>\r\n            <h3>25%</h3>\r\n          </div>\r\n        </HeaderBox>\r\n        <BoxContainer>\r\n          <Box left>\r\n            <h2>Deposit TRX to start earning</h2>\r\n            <form onSubmit={handleInvestment}>\r\n              <InvestContainer>\r\n                <div className=\"label-input\">\r\n                  <p>\r\n                    <b>Enter the amount</b>\r\n                  </p>\r\n                  <p>Available: {trxBalance} TRX</p>\r\n                </div>\r\n                <input\r\n                  placeholder=\"100\"\r\n                  type=\"number\"\r\n                  name=\"name\"\r\n                  onChange={(event) => setInvestment(event.target.value)}\r\n                />\r\n                <div className=\"label-input\">\r\n                  <p>A minimum of 100 TRX for deposits</p>\r\n                </div>\r\n\r\n                <Button type=\"submit\">Deposit</Button>\r\n              </InvestContainer>\r\n            </form>\r\n          </Box>\r\n\r\n          <Box>\r\n            <h2>Dividens</h2>\r\n\r\n            <h3>\r\n              {contractUser.investorInfo.dividens +\r\n                contractUser.investorInfo.availableReferrerEarnings}\r\n            </h3>\r\n            <Button\r\n              onClick={handleWithdrawal}\r\n              type=\"button\"\r\n              className=\"button-fill\"\r\n            >\r\n              Withdraw\r\n            </Button>\r\n\r\n            <h2>Reinvest Wallet</h2>\r\n            <h3>{contractUser.investorInfo.reinvestWallet}</h3>\r\n            <Button\r\n              className=\"button-fill\"\r\n              onClick={handleReinvest}\r\n              type=\"button\"\r\n            >\r\n              Reinvest\r\n            </Button>\r\n          </Box>\r\n\r\n          <Box>\r\n            <h2 className=\"mb-10\">Referal Info</h2>\r\n            <ReferalItem>\r\n              <p>Total Referral Reward Earning:</p>\r\n              <p>{contractUser.investorInfo.referrerEarnings}</p>\r\n            </ReferalItem>\r\n            <ReferalItem>\r\n              <p> Total Referral Reward Available:</p>\r\n              <p>{contractUser.investorInfo.availableReferrerEarnings}</p>\r\n            </ReferalItem>\r\n            <ReferalItem>\r\n              <p> Level 1 (10%) Referrals Deposits:</p>\r\n              <p>{contractUser.investorInfo.level1RefCount}</p>\r\n            </ReferalItem>\r\n            <ReferalItem>\r\n              <p>Level 2 (5%) Referrals Deposits:</p>\r\n              <p>{contractUser.investorInfo.level1RefCount}</p>\r\n            </ReferalItem>\r\n            <ReferalItem>\r\n              <p>Level 3 (3%) Referrals Deposits:</p>\r\n              <p>{contractUser.investorInfo.level1RefCount}</p>\r\n            </ReferalItem>\r\n\r\n            <br />\r\n            <hr></hr>\r\n            <br />\r\n            <div className=\"your-referal\">\r\n              <p>Your Referal Link:</p>\r\n              <p>{getReferalLink()}</p>\r\n            </div>\r\n            <Button className=\"button-fill\" type=\"button\">\r\n              Copy Referal Link\r\n            </Button>\r\n          </Box>\r\n        </BoxContainer>\r\n      </DashboardContainer>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { modalInitialState } from \"./../store/initialState\";\r\nimport { CSSTransition } from \"react-transition-group\"; // ES6\r\n\r\nconst ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & .modal-wrapper {\r\n    position: relative;\r\n    /* height: 120px; */\r\n    padding: 40px;\r\n    background: rgba(0, 0, 0, 0.9);\r\n    /* border: 1px solid red; */\r\n    color: #000;\r\n    z-index: 9;\r\n    display:flex;\r\n    justify-content: center;\r\n\r\n    & .example-enter {\r\n      opacity: 0.01;\r\n    }\r\n\r\n    & .example-enter.example-enter-active {\r\n      opacity: 1;\r\n      transition: opacity 500ms ease-in;\r\n    }\r\n\r\n    & .example-leave {\r\n      opacity: 1;\r\n    }\r\n\r\n    & .example-leave.example-leave-active {\r\n      opacity: 0.01;\r\n      transition: opacity 300ms ease-in;\r\n    }\r\n  }\r\n\r\n  & .modal-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    line-height: 1.8;\r\n    color: white;\r\n  }\r\n`;\r\nconst Modal = ({ modal, setModal }) => {\r\n  const close = () => {\r\n    setModal(modalInitialState);\r\n  };\r\n  return (\r\n    <>\r\n      {modal.visible ? (\r\n        <ModalContainer onClick={close}>\r\n          <div className=\"modal-wrapper\">\r\n            {/* <CSSTransition in={true} timeout={200} classNames=\"example\"> */}\r\n              <div className=\"modal-content\">\r\n                {/* <h3>You can track your transaction below: </h3> */}\r\n                <h3>{modal.title}</h3>\r\n                <p>{modal.text}</p>\r\n              </div>\r\n            {/* </CSSTransition> */}\r\n          </div>\r\n        </ModalContainer>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    maxWidth: 650,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function InvestmentTable({contractUser}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">N°</TableCell>\r\n            <TableCell align=\"left\">Date</TableCell>\r\n            <TableCell align=\"right\">Invested (TRX)</TableCell>\r\n            <TableCell align=\"right\">Paid Out (TRX)</TableCell>\r\n            <TableCell align=\"right\">Expired</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {contractUser.investmentPlan.map((row,index) => (\r\n            <TableRow key={index}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {index}\r\n              </TableCell>\r\n              <TableCell align=\"left\">{row.investmentDates}</TableCell>\r\n              <TableCell align=\"right\">{row.investments}</TableCell>\r\n              <TableCell align=\"right\">{row.currentDividends}</TableCell>\r\n              <TableCell align=\"right\">{row.isExpireds ? \"yes\" : \"no\"}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ButtonLarge } from \"./../components/DashboardStyled\";\r\n\r\nconst HomeContainer = styled.div`\r\n  width: 50vw;\r\n  height: 70vh;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  /* border: 1px solid green; */\r\n\r\n  & h1 {\r\n    font-size: 90px;\r\n    font-family: 'Russo One', sans-serif;\r\n  }\r\n  & p {\r\n    margin: 10px 0;\r\n    font-size: 24px;\r\n    color: #8385a9;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  & button {\r\n    margin-right: 1vh;\r\n    width: 140px;\r\n  }\r\n\r\n  & a {\r\n    margin-right: 1vh;\r\n  }\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  position: fixed;\r\n  left: 50%;\r\n    transform: translate(-50%, 0);\r\n  bottom: 0;\r\n  width: 85vh;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Home = () => {\r\n  const history = useHistory();\r\n\r\n  const investNow = () => {\r\n    history.push(\"/dapp\");\r\n  };\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <h1>NOVA TRON</h1>\r\n      <p>\r\n        Decentralized Smart-Contract Provides Fairness and Transparency. Earn\r\n        25% daily profit up to 200% of your investment. Join Today!\r\n      </p>\r\n\r\n      <ButtonLarge type=\"button\" onClick={investNow}>\r\n        Invest Now\r\n      </ButtonLarge>\r\n\r\n      <Footer>\r\n        <small>\r\n          *Lorem ipsum dolor sit, amet consectetur adipisicing elit. Eveniet,\r\n          est doloremque accusamus nisi autem corrupti, amet optio obcaecati\r\n          nemo nostrum voluptatibus soluta esse unde ratione iste. Esse\r\n          perferendis voluptatibus.\r\n        </small>\r\n      </Footer>\r\n    </HomeContainer>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.76c5c1a5.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Logo from \"./../assets/logo.png\";\r\nimport styled from \"styled-components\";\r\nimport {CONTRACT_ADDRESS} from \"./../constant\"\r\nimport urljoin from 'url-join';\r\n\r\nconst LogoContainer = styled.div`\r\n  display:flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst NavbarContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  /* border: 1px solid red; */\r\n  height: 15vh;\r\n\r\n  & .nav {\r\n    display: flex;\r\n    margin-right: 2vh;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n   \r\n\r\n    & .nav-item {\r\n      margin-left: 15px;\r\n      margin-right: 15px;\r\n    }\r\n  }\r\n\r\n  & .budget {\r\n    height: 38px;\r\n    background: black;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 1vh;\r\n    border: 1px solid black;\r\n    border-radius: 2px 2px;\r\n  }\r\n`;\r\nconst getContractLink = () => {\r\n  const link = urljoin(process.env.REACT_APP_NODE,'contract',CONTRACT_ADDRESS)\r\n  // console.log(link);\r\n  return link;\r\n}\r\nconst Navbar = ({ render, userLogged, walletInfo }) => {\r\n  const maskAddress = () => {\r\n    return;\r\n  };\r\n\r\n  const login = () => {\r\n    if (!userLogged) render();\r\n  };\r\n  return (\r\n    <nav>\r\n      <NavbarContainer>\r\n        <LogoContainer>\r\n          <img src={Logo} width=\"100\" alt=\"logo\" />\r\n        </LogoContainer>\r\n        <div className=\"nav\">\r\n          <div className=\"nav-item\">\r\n            <Link to=\"/\">Home</Link>\r\n          </div>\r\n          <div className=\"nav-item\">\r\n            <Link to=\"/dapp\">Dapp</Link>\r\n          </div>\r\n          <div className=\"nav-item\">\r\n            <Link to=\"/about\">About</Link>\r\n          </div>\r\n          <div className=\"nav-item\">\r\n            <a target=\"_blank\" href={getContractLink()}>Contract</a>\r\n          </div>\r\n\r\n          <div onClick={login} className=\"nav-item budget\">\r\n            <p>{walletInfo.address}</p>\r\n          </div>\r\n\r\n          {/* <li>\r\n  <p>Your Wallet Balance: {walletInfo.balance}</p>\r\n</li> */}\r\n        </div>\r\n      </NavbarContainer>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import \"./assets/App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getTronWeb, getContract, getWalletInfo } from \"./tronWeb\";\r\nimport { LOG_COLOR } from \"./constant\";\r\nimport { Contract } from \"./contract.js\";\r\nimport { Dashboard } from \"./components/Dashboard\";\r\nimport Modal from \"./components/Modal\";\r\nimport Table from \"./components/Table\";\r\nimport { Home } from \"./components/Home\";\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n  walletInfoInitialState,\r\n  contractGlobalInfoInitialState,\r\n  contractUserInfoInitialState,\r\n  modalInitialState,\r\n} from \"./store/initialState\";\r\nimport { ContractContext } from \"./store/context\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  //States\r\n  const [render, setRender] = useState(false);\r\n  const [contract, setContract] = useState(null);\r\n  const [walletInfo, setWalletInfo] = useState(walletInfoInitialState);\r\n  const [contractUser, setContractUser] = useState(\r\n    contractUserInfoInitialState\r\n  );\r\n  const [contractGlobal, setContractGlobal] = useState(\r\n    contractGlobalInfoInitialState\r\n  );\r\n  const [modal, setModal] = useState(modalInitialState);\r\n  const [userLogged,setUserLogged] = useState(false);\r\n\r\n\r\n  //Styled\r\n  const Container = styled.div`\r\n    margin: 0 100px;\r\n  `;\r\n\r\n  useEffect(() => {\r\n    fetchTronWeb()\r\n      .then(() => {\r\n        fetchData();\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setModal({\r\n          visible: true,\r\n          title: \"Warning\",\r\n          text: \"Please sign in the browser TronLink extension\",\r\n        });\r\n      });\r\n  }, [render]);\r\n\r\n  const fetchTronWeb = async () => {\r\n    //Get tronWeb from window\r\n    await getTronWeb();\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const walletInfo = await getWalletInfo();\r\n      const contract = new Contract(await getContract(), walletInfo.address);\r\n      setContract(contract);\r\n      await contract.Initialize();\r\n\r\n      //Subscribe\r\n      contract.subscribeEvents(() => {\r\n        setRender(!render);\r\n      });\r\n\r\n      setWalletInfo(walletInfo);\r\n      setUserLogged(true);\r\n      setContractGlobal(await contract.getContractGlobalInfo());\r\n\r\n      const data = await contract.getContractUserInfo();\r\n      setContractUser(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Modal modal={modal} setModal={setModal}/>\r\n\r\n      <Container>\r\n        <Navbar render={ () => setRender(!render)} userLogged={userLogged} walletInfo={walletInfo} />\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/about\"></Route>\r\n          <Route path=\"/dapp\">\r\n            <ContractContext.Provider value={contract}>\r\n              <Dashboard\r\n                contractGlobal={contractGlobal}\r\n                contractUser={contractUser}\r\n                trxBalance={walletInfo.balance}\r\n                setModal = {setModal}\r\n              />\r\n            </ContractContext.Provider>\r\n            <Table contractUser={contractUser} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/index.css\";\r\nimport App from \"./App\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <Router basename=\"/nova\"> */}\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}